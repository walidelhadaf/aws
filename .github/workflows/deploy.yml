name: Deploy Full Stack App

on:
  push:
    branches:
      - master  # Si ta branche principale est "master"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: |
          cd backend  
          npm install

      - name: Run tests
        run: |
          cd backend  
          npm test

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up SSH key
        run: |
          echo "${{ secrets.AWS_PRIVATE_KEY }}" > my-new-key.pem
          chmod 600 my-new-key.pem

      - name: Create app directory on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i my-new-key.pem ubuntu@${{ secrets.AWS_HOST }} << 'EOF'
            mkdir -p /home/ec2-user/app
          EOF

      - name: Install Node.js and PM2 on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i my-new-key.pem ubuntu@${{ secrets.AWS_HOST }} << 'EOF'
            sudo apt update
            sudo apt install -y nodejs npm
            sudo npm install -g pm2
          EOF

      - name: Clone repository on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i my-new-key.pem ubuntu@${{ secrets.AWS_HOST }} << 'EOF'
            cd /home/ec2-user/app
            if [ ! -d .git ]; then
              git clone https://github.com/votre-utilisateur/votre-projet.git .
            fi
          EOF

      - name: Deploy to AWS EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i my-new-key.pem ubuntu@${{ secrets.AWS_HOST }} << 'EOF'
            cd /home/ec2-user/app
            git pull origin master
            npm install
            pm2 restart all
          EOF

      - name: Copy migrations file to EC2
        run: |
          scp -o StrictHostKeyChecking=no -i my-new-key.pem migrations.sql ubuntu@${{ secrets.AWS_HOST }}:/home/ec2-user/app/migrations.sql

      - name: Migrate Database on RDS
        env:
          PGPASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          ssh -o StrictHostKeyChecking=no -i my-new-key.pem ubuntu@${{ secrets.AWS_HOST }} << 'EOF'
            psql -h ${{ secrets.DB_HOST }} -U ${{ secrets.DB_USER }} -d ${{ secrets.DB_NAME }} -f /home/ec2-user/app/migrations.sql
          EOF